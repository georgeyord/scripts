
# Toggle between English/Greek keyboard layout
set $i3-path    /home/user/.i3/

# SET WORKSPACE LABELS
set $wp-main    "1: main"
set $wp-editor  "2: editor"
set $wp-code    "3: code"
set $wp-browse  "5: browse"
set $wp-tp      "6: tp"
set $wp-docker  "7: docker"
set $wp-system  "8: system"
set $wp-com     "9: com"

#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 6
# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# Rofi darcula style
set $rofi-properties -font "mono 12" -fg "#E0E2E4" -bg "#293134"

# Workspace mode
bindsym $mod+Tab exec i3_switch_workspace.sh

# Focus mode
bindsym $mod+Shift+Tab exec rofi $rofi-properties -show window

# Launcher mode
bindsym $mod+d exec rofi $rofi-properties -show run

# SSH launch mode
bindsym $mod+Shift+d exec rofi $rofi-properties -show ssh

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move focused workspace
bindsym $mod+Shift+i move workspace to output left
bindsym $mod+Shift+o move workspace to output right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+c focus child

# switch to workspace
bindsym $mod+1 workspace $wp-main
bindsym $mod+2 workspace $wp-editor
bindsym $mod+3 workspace $wp-code
bindsym $mod+5 workspace $wp-browse
bindsym $mod+6 workspace $wp-tp
bindsym $mod+7 workspace $wp-docker
bindsym $mod+8 workspace $wp-system
bindsym $mod+9 workspace $wp-com
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $wp-main
bindsym $mod+Shift+2 move container to workspace $wp-editor
bindsym $mod+Shift+3 move container to workspace $wp-code
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace $wp-browse
bindsym $mod+Shift+6 move container to workspace $wp-tp
bindsym $mod+Shift+7 move container to workspace $wp-docker
bindsym $mod+Shift+8 move container to workspace $wp-system
bindsym $mod+Shift+9 move container to workspace $wp-com
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exit

# resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Ctrl+l exec i3-lock
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 1 +10%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 1 -10%
# Mute enable only
bindsym XF86AudioMute exec pactl set-sink-mute 1 1

exec numlockx on

### MAIN ###
workspace $wp-main output DP-0
exec --no-startup-id i3-msg 'workspace $wp-main; append_layout /home/user/.i3/workspaces/main.json'

### EDITOR ###
workspace $wp-editor output DP-0
exec --no-startup-id i3-msg 'workspace $wp-editor; append_layout /home/user/.i3/workspaces/editor.json'

assign [class="Atom"] $wp-editor
assign [class="Sublime_text"] $wp-editor

### CODE ###
workspace $wp-code output DP-0
exec --no-startup-id i3-msg 'workspace $wp-code; append_layout /home/user/.i3/workspaces/code.json'

assign [class="phpstorm"] $wp-code
assign [class="jetbrains\\-idea"] $wp-code
assign [class="jetbrains\-idea"] $wp-code
assign [class="jetbrains\\-rubymine"] $wp-code
assign [class="jetbrains\-rubymine"] $wp-code
assign [class="sun\\-awt\\-X11\\-XFramePeer"] $wp-code
assign [class="mysql\\-workbench\\-bin"] $wp-code

### SYSTEM ###
workspace $wp-system output DP-0
exec --no-startup-id i3-msg 'workspace $wp-system; append_layout /home/user/.i3/workspaces/system.json'

### BROWSE ###
workspace $wp-browse output DP-1
exec --no-startup-id i3-msg 'workspace $wp-tp; append_layout /home/user/.i3/workspaces/browser.json'

assign [window_role="browser"] $wp-browse
assign [class="browser"] $wp-browse
assign [class="google\\-browser"] $wp-browse
assign [class="X\\-www\\-browser"] $wp-browse

### TP ###
workspace $wp-tp output DP-1
exec --no-startup-id i3-msg 'workspace $wp-tp; append_layout /home/user/.i3/workspaces/tp.json'

# set $docker_tp_path /opt/codebase/tripsta/docker/compose/
# set $tp_path /opt/codebase/tripsta/

### DOCKER ###
workspace $wp-docker output DP-1
exec --no-startup-id i3-msg 'workspace $wp-docker; append_layout /home/user/.i3/workspaces/docker.json'

### COM ###
workspace $wp-com output DP-1
exec --no-startup-id i3-msg 'workspace $wp-com; append_layout /home/user/.i3/workspaces/com.json'

assign [class="(?i)skype"] $wp-com
assign [class="Wine"] $wp-com
assign [class="(?i)zoiper"] $wp-com
assign [class="(?i)linphone"] $wp-com
for_window [class="(?i)zoiper"] floating disable

### STATUS BAR ###

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        # Using custom i3status.conf
        status_command sudo i3status -c ~/.i3/i3status.conf
}

### APPLICATIONS / INITIALIZATIONS ###

# Toggle between English/Greek keyboard layout
exec --no-startup-id "setxkbmap -model pc105 -layout us,gr -option grp:alt_shift_toggle"
# Start Dropbox if found
exec --no-startup-id i3-msg 'exec test $(which dropbox) && dropbox start > /tmp/dropbox.log'


#set $docker_tp_path /opt/codebase/tripsta/docker/compose/
#set $tp_path /opt/codebase/tripsta/app/
#set $fl_path /opt/codebase/tripsta/frontline/
#exec --no-startup-id i3-msg 'workspace $wp-main; exec i3-sensible-terminal --working-directory=$docker_tp_path'
#exec --no-startup-id i3-msg 'workspace $wp-main; exec i3-sensible-terminal --working-directory=$docker_tp_path'
#exec --no-startup-id i3-msg 'workspace $wp-main; exec i3-sensible-terminal --working-directory=$tp_path'
#exec --no-startup-id i3-msg 'workspace $wp-main; exec i3-sensible-terminal --working-directory=$fl_path'
#exec --no-startup-id i3-msg 'workspace $wp-main; exec i3-sensible-terminal --working-directory=$docker_tp_path'

exec --no-startup-id i3-msg 'workspace $wp-editor; exec test $(which subl) && exec subl'
exec --no-startup-id i3-msg 'workspace $wp-editor; exec test $(which atom) && atom'

#exec --no-startup-id i3-msg 'workspace $wp-code; exec test $(which rubymine) && rubymine'
#exec --no-startup-id i3-msg 'workspace $wp-code; exec test $(which phpstorm) && phpstorm'

#exec --no-startup-id i3-msg 'workspace $wp-system; exec test $(which multitail) && sudo multitail /var/log/supervisor/*.log'
#exec --no-startup-id i3-msg 'workspace $wp-system; exec test $(which htop) && htop'

exec --no-startup-id i3-msg 'workspace $wp-browse; exec test $(which sensible-browser) && sensible-browser'

#exec --no-startup-id i3-msg 'workspace $wp-tp; exec i3-sensible-terminal --working-directory=$tp_path -t tpapp'
#exec --no-startup-id i3-msg 'workspace $wp-tp; exec i3-sensible-terminal --working-directory=$docker_tp_path'
#exec --no-startup-id i3-msg 'workspace $wp-tp; exec i3-sensible-terminal --working-directory=$docker_tp_path'
#exec --no-startup-id i3-msg 'workspace $wp-tp; exec i3-sensible-terminal --working-directory=$docker_tp_path'

# set $docker_path /opt/codebase/dockerfiles/compose/
#exec --no-startup-id i3-msg 'workspace $wp-docker; exec i3-sensible-terminal --working-directory=$docker_path'
#exec --no-startup-id i3-msg 'workspace $wp-docker; exec i3-sensible-terminal --working-directory=$docker_path'
#exec --no-startup-id i3-msg 'workspace $wp-docker; exec i3-sensible-terminal --working-directory=$docker_path'
#exec --no-startup-id i3-msg 'workspace $wp-docker; exec i3-sensible-terminal --working-directory=$docker_path'
#exec --no-startup-id i3-msg 'workspace $wp-docker; exec i3-sensible-terminal --working-directory=$docker_path'

#exec --no-startup-id i3-msg 'workspace $wp-com; test $(which zoiper) && exec zoiper'
#exec --no-startup-id i3-msg 'workspace $wp-com; test $(which skype) && exec skype'
